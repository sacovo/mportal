# Generated by Django 2.0.4 on 2018-07-02 11:10

import colorfield.fields
import datetime
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('users', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Kontaktliste',
                'verbose_name_plural': 'Kontaktlisten',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CustomGroup',
            fields=[
                ('group_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.Group')),
            ],
            options={
                'verbose_name': 'Gruppe',
                'verbose_name_plural': 'Gruppen',
                'ordering': ['name'],
            },
            bases=('auth.group',),
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name='FieldMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('var_name', models.CharField(choices=[('om_number', 'OM Nummer'), ('first_name', 'Vorname'), ('last_name', 'Nachname'), ('street', 'Strasse'), ('plz', 'PLZ'), ('city', 'Ort'), ('phone_priv', 'Telefon privat'), ('phone_busi', 'Telefon Geschäftlich'), ('phone_mobi', 'Mobil'), ('country', 'Land'), ('email', 'E-Mail'), ('gender', 'Geschlecht'), ('letter_opening', 'Briefanrede'), ('birthday', 'Geburtstag'), ('position', 'Gruppen'), ('birthday_day', 'Geburtstag Tag'), ('birthday_month', 'Geburtstag Monat'), ('birthday_year', 'Geburtstag Year')], max_length=100)),
                ('column_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='FormField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('var_name', models.CharField(max_length=100)),
                ('input_type', models.CharField(choices=[('forms.DateField', 'Datum'), ('forms.TimeField', 'Zeit'), ('forms.CharField', 'Text'), ('forms.ChoiceField', 'Auswahl'), ('forms.MultipleChoiceField', 'Mehrfachauswahl'), ('forms.BooleanField', 'Wahrheitswert'), ('forms.DecimalField', 'Zahl'), ('forms.EmailField', 'E-Mail'), ('forms.URLField', 'URL'), ('forms.FileField', 'Datei')], max_length=50)),
                ('label', models.CharField(max_length=100)),
                ('ordering', models.IntegerField(default=1)),
                ('required', models.BooleanField(default=True, verbose_name='Benötigt')),
                ('initial', models.CharField(blank=True, max_length=300, verbose_name='Default')),
                ('choices', models.TextField(blank=True, help_text='Eine Option pro Zeile', verbose_name='Auswahl')),
                ('widget', models.CharField(blank=True, choices=[('forms.PasswordInput', 'Passwort-Widget'), ('forms.Textarea', 'Langer Text'), ('forms.SelectInput', 'Select-Widget'), ('forms.Select', 'Select-Widget'), ('forms.SelectMultiple', 'Mehrfach-Select'), ('forms.RadioSelect', 'Select-Radio-Widget'), ('forms.CheckboxSelectMultiple', 'Multipleselect Checkbox')], max_length=100, verbose_name='Widget')),
            ],
            options={
                'verbose_name': 'Formularfeld',
                'verbose_name_plural': 'Formularfelder',
                'ordering': ['ordering', 'var_name'],
            },
        ),
        migrations.CreateModel(
            name='FormFieldAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField()),
            ],
            options={
                'verbose_name': 'Formular-Antwort',
                'verbose_name_plural': 'Formular-Antworten',
            },
        ),
        migrations.CreateModel(
            name='ImportMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Verknüpfung',
                'verbose_name_plural': 'Verknüpfungen',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='LetterTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('template', models.FileField(upload_to='templates/', verbose_name='Vorlage (.tex)')),
            ],
            options={
                'verbose_name': 'Briefvorlage',
                'verbose_name_plural': 'Briefvorlagen',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MailGunEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.CharField(choices=[('accepted', 'accepted'), ('rejected', 'rejected'), ('delivered', 'delivered'), ('failed', 'failed'), ('opened', 'opened'), ('clicked', 'clicked'), ('unsubscribed', 'unsubscribed'), ('complained', 'complained'), ('stored', 'stored')], max_length=30)),
                ('country', models.CharField(blank=True, max_length=20)),
                ('device_type', models.CharField(blank=True, max_length=50)),
                ('client_type', models.CharField(blank=True, max_length=50)),
                ('client_os', models.CharField(blank=True, max_length=50)),
                ('tag', models.CharField(blank=True, max_length=100)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('url', models.URLField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Tracking-Event',
                'verbose_name_plural': 'Tracking-Events',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='MailGunMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('subject', models.CharField(max_length=200)),
                ('sender', models.EmailField(max_length=254)),
                ('content', models.TextField()),
                ('tag', models.CharField(blank=True, max_length=100, null=True)),
                ('open_points', models.SmallIntegerField(default=0)),
                ('click_points', models.SmallIntegerField(default=0)),
                ('remove_points', models.SmallIntegerField(default=0)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Group')),
            ],
            options={
                'verbose_name': 'Tracking-Mail',
                'verbose_name_plural': 'Tracking-Mails',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='MailGunUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(max_length=20)),
                ('api_key', models.CharField(max_length=100)),
                ('group', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='auth.Group')),
            ],
            options={
                'verbose_name': 'Mailgun-Zugang',
                'verbose_name_plural': 'Mailgun-Zugänge',
            },
        ),
        migrations.CreateModel(
            name='MailTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=180)),
                ('template', models.FileField(upload_to='mail-templates/', verbose_name='Vorlage (.html)')),
            ],
            options={
                'verbose_name': 'Mail Vorlage',
                'verbose_name_plural': 'Mail Vorlagen',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('om_number', models.CharField(blank=True, max_length=120, verbose_name='OM-Nummer')),
                ('anrede', models.CharField(blank=True, max_length=30, verbose_name='Anrede')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='Vorname')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='Name')),
                ('street', models.CharField(blank=True, max_length=50, verbose_name='Strasse')),
                ('plz', models.CharField(blank=True, max_length=10, verbose_name='PLZ')),
                ('city', models.CharField(blank=True, max_length=80, verbose_name='Ort')),
                ('country', models.CharField(blank=True, max_length=2, verbose_name='Land')),
                ('phone_priv', models.CharField(blank=True, max_length=30, verbose_name='Telefon Privat')),
                ('phone_busi', models.CharField(blank=True, max_length=30, verbose_name='Telefon Geschäftlich')),
                ('phone_mobi', models.CharField(blank=True, max_length=30, verbose_name='Mobil')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='E-Mail')),
                ('gender', models.CharField(blank=True, max_length=20, verbose_name='Geschlecht')),
                ('letter_opening', models.CharField(blank=True, max_length=40, verbose_name='Briefanrede')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Geburtstag')),
                ('status', models.CharField(choices=[('SY', 'Sympi'), ('ME', 'Mitglied'), ('EL', 'Sonstige')], default='EL', max_length=40, null=True, verbose_name='Status')),
                ('updated', models.BooleanField(default=True)),
                ('last_active', models.DateTimeField(default=datetime.datetime(1970, 1, 1, 0, 0), verbose_name='Letzte Aktivität')),
                ('activity_points', models.IntegerField(default=0)),
                ('sent_mails', models.IntegerField(default=0)),
                ('mail_activity', models.IntegerField(default=0, verbose_name='Mail Aktivität')),
                ('contact_list', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mportal.ContactList')),
                ('imported_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Mitglied',
                'verbose_name_plural': 'Mitglieder',
                'ordering': ['last_name', 'last_name'],
            },
        ),
        migrations.CreateModel(
            name='Member2Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relation_name', models.CharField(max_length=100, verbose_name='Relation')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('member_from', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_relation', to='mportal.Member', verbose_name='Relation von')),
                ('member_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_relation', to='mportal.Member', verbose_name='Relation zu')),
            ],
            options={
                'verbose_name': 'M2M',
                'verbose_name_plural': 'M2M',
            },
        ),
        migrations.CreateModel(
            name='MemberField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('var_name', models.CharField(choices=[('om_number', 'OM Nummer'), ('first_name', 'Vorname'), ('last_name', 'Nachname'), ('street', 'Strasse'), ('plz', 'PLZ'), ('city', 'Ort'), ('phone_priv', 'Telefon privat'), ('phone_busi', 'Telefon Geschäftlich'), ('phone_mobi', 'Mobil'), ('country', 'Land'), ('email', 'E-Mail'), ('gender', 'Geschlecht'), ('letter_opening', 'Briefanrede'), ('birthday', 'Geburtstag'), ('position', 'Gruppen'), ('birthday_day', 'Geburtstag Tag'), ('birthday_month', 'Geburtstag Monat'), ('birthday_year', 'Geburtstag Year')], max_length=50)),
                ('label', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Beschreibung')),
            ],
            options={
                'verbose_name': 'Mitgliedschaft',
                'verbose_name_plural': 'Mitgliedschaften',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=100, verbose_name='Betreff')),
                ('content', models.TextField(verbose_name='Notiz')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Erstellt')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Bearbeitet')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mportal.Member')),
            ],
            options={
                'verbose_name': 'Notiz',
                'verbose_name_plural': 'Notizen',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Occupation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Beschreibung')),
            ],
            options={
                'verbose_name': 'Beschäftigung',
                'verbose_name_plural': 'Beschäftigungen',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PortalForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField()),
                ('color', colorfield.fields.ColorField(default='#4CAF50', max_length=18, verbose_name='Hintergrund')),
                ('email_field_name', models.CharField(default='email', max_length=300)),
                ('confirmation_text', models.TextField(default='Hallo {member.first_name},\nDu hast bei {form.name} teilgenommen. Klicke auf disen Link, um deine Antwort zu bestätigen:\n\n{confirmation_link}\n\nVielen Dank und Freundliche Grüsse\nXXX\n')),
                ('contact_name', models.CharField(default='JUSO Schweiz', max_length=100)),
                ('contact_mail', models.EmailField(default='info@juso.ch', max_length=254)),
                ('editable', models.BooleanField(default=False, verbose_name='Editierbar')),
                ('allowed_groups', models.ManyToManyField(to='auth.Group')),
                ('destination_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='form_dest', to='auth.Group')),
                ('users', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Formular',
                'verbose_name_plural': 'Formulare',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PortalFormAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confirmation_string', models.CharField(max_length=200)),
                ('confirmed', models.BooleanField(verbose_name='Bestätigt')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mportal.Member')),
                ('portal_form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mportal.PortalForm')),
            ],
            options={
                'verbose_name': 'Formular Antwort',
                'verbose_name_plural': 'Formular Antworten',
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Beschreibung')),
            ],
            options={
                'verbose_name': 'Fähigkeit',
                'verbose_name_plural': 'Fähigkeiten',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SMS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Inhalt')),
                ('incoming', models.BooleanField(verbose_name='Eingehend')),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('is_mass', models.BooleanField(default=True)),
                ('location_string', models.CharField(blank=True, max_length=300)),
                ('twilio_sid', models.CharField(blank=True, max_length=100)),
                ('delivered', models.BooleanField(default=True)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mportal.Member')),
            ],
            options={
                'verbose_name': 'SMS',
                'verbose_name_plural': 'SMS',
                'ordering': ['-time'],
            },
        ),
        migrations.CreateModel(
            name='SMSSender',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=20)),
                ('username', models.CharField(max_length=100)),
                ('sid', models.CharField(max_length=40)),
                ('auth', models.CharField(max_length=40)),
                ('group', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='auth.Group')),
            ],
            options={
                'verbose_name': 'Twilio-Zugang',
                'verbose_name_plural': 'Twilio-Zugänge',
            },
        ),
        migrations.CreateModel(
            name='TemplateField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('var_name', models.CharField(max_length=100)),
                ('input_type', models.CharField(choices=[('forms.DateField', 'Datum'), ('forms.TimeField', 'Zeit'), ('forms.CharField', 'Text'), ('forms.BooleanField', 'Wahrheitswert'), ('forms.DecimalField', 'Zahl'), ('forms.EmailField', 'E-Mail'), ('forms.URLField', 'URL'), ('forms.FileField', 'Datei')], max_length=20)),
                ('label', models.CharField(max_length=100)),
                ('argument_string', models.CharField(blank=True, max_length=200)),
                ('ordering', models.IntegerField(default=1)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='mportal.LetterTemplate')),
            ],
            options={
                'verbose_name': 'Brieffeld',
                'verbose_name_plural': 'Brieffelder',
                'ordering': ['ordering', 'var_name'],
            },
        ),
        migrations.AddField(
            model_name='sms',
            name='twilio_account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mportal.SMSSender'),
        ),
        migrations.AddField(
            model_name='memberfield',
            name='form',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mportal.PortalForm'),
        ),
        migrations.AddField(
            model_name='member',
            name='memberships',
            field=models.ManyToManyField(blank=True, to='mportal.Membership', verbose_name='Mitgliedschaften'),
        ),
        migrations.AddField(
            model_name='member',
            name='occupations',
            field=models.ManyToManyField(blank=True, to='mportal.Occupation', verbose_name='Veranstaltungen'),
        ),
        migrations.AddField(
            model_name='member',
            name='position',
            field=models.ManyToManyField(blank=True, to='auth.Group', verbose_name='Gruppen'),
        ),
        migrations.AddField(
            model_name='member',
            name='read_mails',
            field=models.ManyToManyField(blank=True, to='mportal.MailGunMessage'),
        ),
        migrations.AddField(
            model_name='member',
            name='related_to',
            field=models.ManyToManyField(through='mportal.Member2Member', to='mportal.Member', verbose_name='Beziehung'),
        ),
        migrations.AddField(
            model_name='member',
            name='skills',
            field=models.ManyToManyField(blank=True, to='mportal.Skill', verbose_name='Fähigkeiten'),
        ),
        migrations.AddField(
            model_name='mailgunmessage',
            name='recipients',
            field=models.ManyToManyField(to='mportal.Member'),
        ),
        migrations.AddField(
            model_name='mailgunevent',
            name='message',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mportal.MailGunMessage'),
        ),
        migrations.AddField(
            model_name='mailgunevent',
            name='recipient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mportal.Member'),
        ),
        migrations.AddField(
            model_name='formfieldanswer',
            name='answer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='mportal.PortalFormAnswer'),
        ),
        migrations.AddField(
            model_name='formfieldanswer',
            name='form_field',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mportal.FormField'),
        ),
        migrations.AddField(
            model_name='formfield',
            name='form',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='mportal.PortalForm'),
        ),
        migrations.AddField(
            model_name='fieldmapping',
            name='mapping',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='mportal.ImportMapping'),
        ),
        migrations.AddIndex(
            model_name='member',
            index=models.Index(fields=['om_number', 'contact_list'], name='mportal_mem_om_numb_802a29_idx'),
        ),
    ]
